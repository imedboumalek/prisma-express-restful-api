generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Author {
  id          Int           @id @default(autoincrement())
  email       String        @unique @db.VarChar(320)
  password    String        @db.VarChar(60)
  salt        String        @db.VarChar(60)
  username    String        @unique @db.VarChar(50)
  first_name  String        @default("") @db.VarChar(50)
  last_name   String        @default("") @db.VarChar(50)
  countryId   Int?
  orgId       Int?
  submissions Submission[]
  country     Country?      @relation(fields: [countryId], references: [id])
  org         Organization? @relation(fields: [orgId], references: [id])
  updatedAt   DateTime      @updatedAt
  createdAt   DateTime      @default(now()) @db.Timestamp
}

model Conference {
  id             Int          @id @default(autoincrement())
  name           String       @db.VarChar(128)
  date           DateTime?    @db.Timestamp(6)
  sub_limit_date DateTime?    @db.Timestamp(6)
  createdAt      DateTime     @db.Timestamp
  updatedAt      DateTime     @updatedAt
  submissions    Submission[]
  topicId        Int
  topic          Topic        @relation(fields: [topicId], references: [id])
  countryId      Int
  country        Country      @relation(fields: [countryId], references: [id])
  organizerId    Int
  organizer      Organization @relation(fields: [organizerId], references: [id])

}

model Country {
  id          Int            @id @default(autoincrement())
  name        String         @db.VarChar(128)
  code        String         @db.VarChar(2)
  authors     Author[]
  orgs        Organization[]
  conferences Conference[]
}

model Organization {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(128)
  author      Author[]
  countryId   Int
  country     Country      @relation(fields: [countryId], references: [id])
  conferences Conference[]

}

model Submission {
  id              Int          @id @default(autoincrement())
  title           String?      @db.VarChar(256)
  resume          String?
  url             String?      @db.VarChar(512)
  topicId         Int
  topic           Topic        @relation(fields: [topicId], references: [id])
  tags            Tag[]
  conferences     Conference[]
  authors         Author[]
  updatedAt       DateTime     @updatedAt
  submission_date DateTime     @default(now()) @db.Timestamp(6)

}

// model SubmissionAuthors {
//   author       Author     @relation(fields: [authorId], references: [id])
//   authorId     Int
//   submission   Submission @relation(fields: [submissionId], references: [id])
//   submissionId Int

//   @@id([authorId, submissionId])
// }
// model ConferenceSubmissions {
//   submission   Submission @relation(fields: [submissionId], references: [id])
//   submissionId Int
//   conference   Conference  @relation(fields: [conferenceId], references: [id])
//   conferenceId Int

//   @@id([submissionId, conferenceId])
// }
model Tag {
  id          Int          @id @default(autoincrement())
  title       String       @default("") @db.VarChar(50)
  submissions Submission[]
}

// model SubmissionTags {
//   tagId  Int
//   tag    Tag        @relation(fields: [tagId], references: [id])
//   postId Int
//   post   Submission @relation(fields: [postId], references: [id])

//   @@id([tagId, postId])
// }

model Topic {
  id          Int          @id @default(autoincrement())
  name        String       @default("") @db.VarChar(128)
  conferences Conference[]
  submissions Submission[]
}
